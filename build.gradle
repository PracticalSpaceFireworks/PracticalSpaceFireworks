import groovy.xml.MarkupBuilder

plugins {
    id 'net.minecraftforge.gradle.forge' version '2.3.4'
    id 'io.franzbecker.gradle-lombok' version '5.0.0'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'net.nemerosa.versioning' version '2.15.1'
}

def buildNumber = System.getenv('BUILD_NUMBER') ?: versioning.info.build

group = "net.gegy1000"
version = "0.2.1.$buildNumber"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

lombok {
    version = '1.18.22'
    sha256 = '39f3922deb679b1852af519eb227157ef2dd0a21eec3542c8ce1b45f2df39742'
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    mappings = 'stable_39'
    runDir = 'minecraft'
}

repositories {
    maven {
        url = 'https://maven.tterrag.com'
    }
    maven {
        url = 'https://cursemaven.com'
    }
    maven {
        url = 'https://dvs1.progwml6.com/files/maven'
    }
}

dependencies {
    runtime 'team.chisel.ctm:CTM:MC1.12.2-1.0.2.31'
    compile 'curse.maven:hwyla-253449:2568751' // 1.8.26-B41_1.12.2
    deobfProvided 'mezz.jei:jei_1.12.2:4.16.1.302:api'
    runtime 'mezz.jei:jei_1.12.2:4.16.1.302'
}

compileJava {
    options.with {
        it.fork = true
        it.deprecation = true
        it.encoding = 'UTF-8'
        it.compilerArgs.addAll(['-Xlint:all', '-parameters'])
    }
}

processResources {
    filesMatching(['/mcmod.info', 'version.properties']) {
        expand 'version': project.version
    }
}

jar {
    from '/LICENSE'
    from sourceSets.api.output
    from sourceSets.main.output
}

task apiJar(type: Jar) {
    from '/LICENSE'
    from sourceSets.api.allSource
    from sourceSets.api.output
    classifier = 'api'
}

sourceJar {
    from '/LICENSE'
}

reobf {
    apiJar {
        mappingType = 'SEARGE'
    }
}

assemble {
    dependsOn apiJar, reobfApiJar
}

tasks.eclipse {
    dependsOn installLombok
}

if (project.hasProperty('curseforge_key')) {
    curseforge {
        apiKey = project.curseforge_key

        project {
            id = '291502'
            changelog = System.getenv('CHANGELOG')
            if (changelog == null || changelog == 'none') {
                changelog = parseChangelog()
            }
            changelogType = 'html'
            releaseType = 'beta'
            addGameVersion '1.12.2'
            mainArtifact(jar) {
                displayName = "$rootProject.name - $version"
            }
            relations {
                requiredDependency 'ctm'
            }
        }
    }
}

String parseChangelog() {
    def writer = new StringWriter()
    def html = new MarkupBuilder(writer)
    html.h2 "$rootProject.name $version"
    html.ul {
        file('changelog.txt').withReader('UTF-8') { reader ->
            reader.readLine() // Skip first line containing version number
            String line
            while ((line = reader.readLine()) != null) {
                if (line.startsWith('-')) {
                    def matcher = line =~ /-\s(#\d+)\s(.+)\u0024/
                    if (matcher.matches()) { // References an issue ticker number
                        def repo = 'https://github.com/PracticalSpaceFireworks/PracticalSpaceFireworks'
                        // Create a list element with hyperlink, <a href="..."><li>...</li></a>
                        html.a(href: "$repo/issues/${matcher.group(1)}") {
                            html.li matcher.group(2)
                        }
                    } else {
                        // Append regular list element <li>...</li>
                        html.li line.substring('- '.length()).trim()
                    }
                } else {
                    if (line.trim().empty) {
                        // Blank line, end of version changelog
                        break
                    }

                    // Append header, e.g Changes, Fixes
                    html.h4 line
                }
            }
        }
    }
    return writer.toString()
}
